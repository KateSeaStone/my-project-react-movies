{"version":3,"sources":["components/Container/Container.js","components/Searchbar/Searchbar.js","api/imagesApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Searchbar","props","onSubmit","useState","query","setQuery","event","preventDefault","trim","toast","error","type","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","fetchImages","currentPage","a","fetch","result","json","ImageGalleryItem","id","original","preview","showModal","src","alt","onClick","modalRoot","document","body","Modal","largeImageURL","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","Button","handleClick","Loader","color","height","width","timeout","React","Component","ImageGallery","images","handleButtonClick","isLoading","setShowModal","setLargeImageURL","openModal","imageUrl","map","image","index","webformatURL","App","setImages","setError","setCurrentPage","setIsLoading","isScroll","setIsScroll","then","data","concat","hits","length","catch","scrollTo","top","documentElement","scrollHeight","behavior","newQuery","position","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e42a03a.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import { useState } from 'react';\r\nimport './Searchbar.scss';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Searchbar = (props) => {\r\n  const { onSubmit } = props;\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = event => {\r\n    setQuery(event.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      toast.error('Введите корректный запрос!');\r\n      return\r\n    }\r\n\r\n    onSubmit(query);\r\n  }\r\n\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Searchbar;\r\n","\r\nconst apiKey = '22003167-822d2c3fa2b59190c92d4d864';\r\n\r\nconst fetchImages = async (query, currentPage) => {\r\n  let result = await fetch(`https://pixabay.com/api/?q=${query}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`)\r\n  return await result.json()\r\n}\r\n\r\n\r\n\r\nexport default fetchImages;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.scss';\r\n\r\n\r\nconst ImageGalleryItem = (props) => {\r\n  const { id, original, preview, showModal } = props;\r\n  return (\r\n    <li\r\n      key={id}\r\n      className=\"ImageGalleryItem\">\r\n      <img\r\n        src={preview}\r\n        alt={preview}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => showModal(original)} />\r\n    </li>\r\n  )\r\n\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  showModal: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default ImageGalleryItem;","//import { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.body;\r\n\r\nconst Modal = (props) => {\r\n  const { largeImageURL, onClose } = props;\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = event => {\r\n      if (event.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return function cleanup() {\r\n      window.removeEventListener('keydown', handleKeyDown)\r\n    }\r\n\r\n  }, [onClose]);\r\n\r\n  const handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleOverlayClick} >\r\n      <div className=\"Modal\" >\r\n        <img\r\n          src={largeImageURL}\r\n          alt={largeImageURL}\r\n          onClick={onClose} />\r\n      </div>\r\n    </div>, modalRoot);\r\n}\r\n\r\n\r\n// export default class Modal extends Component {\r\n\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown)\r\n//     //console.log(modalRoot);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown)\r\n//   }\r\n\r\n//   handleKeyDown = event => {\r\n//     if (event.code === 'Escape') {\r\n//       this.props.onClose();\r\n//     }\r\n//   }\r\n\r\n//   handleOverlayClick = event => {\r\n//     if (event.currentTarget === event.target) {\r\n//       this.props.onClose();\r\n//     }\r\n//   }\r\n\r\n//   clickOnImage = () => this.props.onClose();\r\n\r\n\r\n//   render() {\r\n\r\n//     return createPortal(\r\n//       <div className=\"Overlay\" onClick={this.handleOverlayClick} >\r\n//         <div className=\"Modal\" >\r\n//           <img\r\n//             src={this.props.largeImageURL}\r\n//             alt={this.props.largeImageURL}\r\n//             onClick={this.clickOnImage} />\r\n//         </div>\r\n//       </div>, modalRoot);\r\n//   }\r\n\r\n\r\n// }\r\n\r\nexport default Modal;\r\n\r\n\r\n","import './Button.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = (props) => {\r\n  const { handleClick } = props;\r\n  return (\r\n    <button\r\n      className=\"loadMoreBtn\"\r\n      type=\"button\"\r\n      onClick={handleClick}\r\n    >Load more</button>\r\n  )\r\n};\r\n\r\n\r\nButton.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Spinner from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\n\r\nclass Loader extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"loader\">\r\n\r\n        <Spinner\r\n          type=\"ThreeDots\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={4000} />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Loader;\r\n\r\n\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGallery.scss';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '../Button/Button';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst ImageGallery = (props) => {\r\n  const { images, handleButtonClick, isLoading } = props;\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n\r\n  const openModal = (imageUrl) => {\r\n    setShowModal(true);\r\n    setLargeImageURL(imageUrl);\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {images.map((image, index) => (\r\n          <ImageGalleryItem\r\n            key={`${index}_${image.id}`}\r\n            id={`${index}_${image.id}`}\r\n            preview={image.webformatURL}\r\n            original={image.largeImageURL}\r\n            showModal={openModal}\r\n          />\r\n        ))}\r\n      </ul >\r\n\r\n      {isLoading && <Loader />}\r\n\r\n      {!isLoading && <Button handleClick={handleButtonClick} />}\r\n\r\n      {showModal && <Modal largeImageURL={largeImageURL} onClose={closeModal} />}\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n\r\n\r\n\r\n\r\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.scss';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport fetchImages from './api/imagesApi';\nimport ImageGallery from './components/ImageGallery';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isScroll, setIsScroll] = useState(false);\n\n  useEffect(() => {\n    if (query !== '') {\n      fetchImages(query, currentPage)\n        .then(data => {\n          setImages(images.concat(data.hits));\n          setIsLoading(false);\n          if (currentPage > 0 && data.hits.length > 0) {\n            setIsScroll(true);\n          }\n        })\n        .catch(error => setError({ error }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query, currentPage])\n\n  useEffect(() => {\n    if (isScroll) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n      setIsScroll(false);\n    }\n\n  }, [isScroll])\n\n  const handleFormSubmit = newQuery => {\n    if (!((newQuery === query) && (currentPage === 1))) {\n      setImages([]);\n      setError(null);\n      setCurrentPage(1);\n      setQuery(newQuery);\n      setIsLoading(true);\n    };\n  }\n\n  const handleButtonClick = () => {\n    setCurrentPage(currentPage + 1);\n    setIsLoading(true);\n  }\n\n  return (\n    <Container>\n      {error && <h2>Opps! Something went wrong!</h2>}\n      <Searchbar onSubmit={handleFormSubmit} />\n\n      {images.length > 0 && (\n        <ImageGallery\n          images={images}\n          handleButtonClick={handleButtonClick}\n          isLoading={isLoading}\n        />)}\n\n      <ToastContainer position=\"top-center\" autoClose={4000} />\n    </Container>\n  )\n\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}